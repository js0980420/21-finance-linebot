import{a as N}from"./DgLT0ASK.js";import{D as O,r as A}from"#entry";const T=()=>{const{get:f,post:i,put:p}=N(),g=O(),m=async s=>{const{data:e,error:r}=await i("/auth/login",s);if(r)return{success:!1,error:r};if(e.user&&e.access_token){const o={...e.user,token:e.access_token};sessionStorage.setItem("user-profile",JSON.stringify(o)),a.value=o}return{success:!0,user:e.user,token:e.access_token}},d=async()=>{try{await i("/auth/logout")}catch(s){console.warn("Logout API call failed:",s)}sessionStorage.removeItem("user-profile"),localStorage.removeItem("auth-token"),localStorage.removeItem("admin-template-user"),a.value=null,await g.push("/auth/login")},S=async()=>{const{data:s,error:e}=await f("/auth/me");if(e)return{success:!1,error:e,user:null};if(s.user){const r=sessionStorage.getItem("user-profile");let o=null;if(r)try{o=JSON.parse(r).token}catch(c){console.error("Failed to parse current profile:",c)}const n={...s.user,...o?{token:o}:{}};sessionStorage.setItem("user-profile",JSON.stringify(n)),a.value=n}return{success:!0,user:s.user}},h=async s=>{const{data:e,error:r}=await p("/auth/profile",s);if(r)return{success:!1,error:r};if(e.user){const o=sessionStorage.getItem("user-profile");let n=null;if(o)try{n=JSON.parse(o).token}catch(l){console.error("Failed to parse current profile:",l)}const c={...e.user,...n?{token:n}:{}};sessionStorage.setItem("user-profile",JSON.stringify(c))}return{success:!0,user:e.user,message:e.message}},k=async()=>{const{data:s,error:e}=await i("/auth/refresh");if(e)return{success:!1,error:e};if(s.access_token&&s.user){const r={...s.user,token:s.access_token};sessionStorage.setItem("user-profile",JSON.stringify(r))}return{success:!0,token:s.access_token,user:s.user}},y=()=>!!sessionStorage.getItem("user-profile"),u=()=>{const s=sessionStorage.getItem("user-profile");return s?JSON.parse(s):null},I=s=>{const e=u();return!e||!e.permissions?!1:e.permissions.includes(s)},t=s=>{const e=u();return!e||!e.roles?!1:e.roles.includes(s)},v=()=>t("admin")||t("executive"),P=()=>t("admin")||t("executive")||t("manager"),w=()=>t("staff"),J=()=>t("admin")||t("executive"),a=A(u());return{login:m,logout:d,getCurrentUser:S,updateProfile:h,refreshToken:k,isAuthenticated:y,getLocalUser:u,hasPermission:I,hasRole:t,isAdmin:v,isManager:P,isStaff:w,canViewAllChats:J,user:a,updateUserState:()=>{a.value=u()}}};export{T as u};
