import{a as y}from"./DgLT0ASK.js";import{l as x}from"#entry";const n={users:[{id:101,name:"業務A",email:"salesA@example.com",roles:[{name:"staff"}]},{id:102,name:"業務B",email:"salesB@example.com",roles:[{name:"staff"}]},{id:103,name:"業務C",email:"salesC@example.com",roles:[{name:"staff"}]},{id:100,name:"管理員",email:"admin@finance-crm.com",roles:[{name:"admin"}]}],success:!0},_=()=>{const{get:f,post:p,put:m,del:U}=y(),o=x().public.apiBaseUrl==="/mock-api",l=async(e={})=>{if(o){console.warn("[Mock Users] Intercepted get users request. Returning mock data.");let t=n.users;if(e.search){const i=e.search.toLowerCase();t=t.filter(g=>g.name.toLowerCase().includes(i)||g.email.toLowerCase().includes(i))}e.role&&(t=t.filter(i=>i.roles.some(g=>g.name===e.role)));const c=e.page||1,a=e.per_page||15,u=(c-1)*a,k=u+a;return{success:!0,users:t.slice(u,k),meta:{total:t.length,perPage:a,currentPage:c,lastPage:Math.ceil(t.length/a)}}}const{data:s,error:r}=await f("/users",e);return r?{success:!1,error:r,users:[],meta:null}:{success:!0,users:s.data||s,meta:{total:s.total||0,perPage:s.per_page||15,currentPage:s.current_page||1,lastPage:s.last_page||1}}},w=async e=>{const{data:s,error:r}=await f(`/users/${e}`);return r?{success:!1,error:r,user:null}:{success:!0,user:s.user||s}},h=async e=>{if(o){console.warn("[Mock Users] Intercepted create user request. Returning mock success.");const t={id:n.users.length+1,...e,roles:[{name:"staff"}]};return n.users.push(t),{success:!0,user:t}}const{data:s,error:r}=await p("/users",e);return r?{success:!1,error:r}:{success:!0,user:s.user||s}},d=async(e,s)=>{if(o){console.warn(`[Mock Users] Intercepted update user request for ID: ${e}. Returning mock success.`);const c=n.users.findIndex(a=>a.id===parseInt(e));return c!==-1&&Object.assign(n.users[c],s),{success:!0,user:n.users[c]}}const{data:r,error:t}=await m(`/users/${e}`,s);return t?{success:!1,error:t}:{success:!0,user:r.user||r}};return{getUsers:l,getUser:w,createUser:h,updateUser:d,deleteUser:async e=>{if(o){console.warn(`[Mock Users] Intercepted delete user request for ID: ${e}. Returning mock success.`);const t=n.users.length;return n.users=n.users.filter(c=>c.id!==parseInt(e)),{success:!0,message:"用戶已刪除 (Mock)",deletedCount:t-n.users.length}}const{data:s,error:r}=await U(`/users/${e}`);return r?{success:!1,error:r}:{success:!0,message:s.message||"用戶已刪除"}},getUserStats:async()=>{const{data:e,error:s}=await f("/users/stats/overview");return s?{success:!1,error:s,stats:null}:{success:!0,stats:e}},searchUsers:async e=>{if(o){console.warn("[Mock Users] Intercepted search users request. Returning mock data.");const{users:r,meta:t}=await l({search:e.query||"",role:e.role||"",status:e.status||"",page:e.page||1,per_page:e.perPage||15});return{success:!0,users:r,meta:t}}const s={search:e.query||"",role:e.role||"",status:e.status||"",page:e.page||1,per_page:e.perPage||15};return await l(s)},batchUpdateUserStatus:async(e,s)=>{const r=e.map(t=>d(t,{status:s}));try{const t=await Promise.allSettled(r),c=t.filter(u=>u.status==="fulfilled").length,a=t.filter(u=>u.status==="rejected").length;return{success:a===0,message:`已更新 ${c} 位用戶狀態${a>0?`，${a} 位失敗`:""}`,successful:c,failed:a}}catch(t){return{success:!1,error:t}}},checkUsernameAvailable:async(e,s=null)=>{try{const r={search:e},{users:t}=await l(r);return!t.find(a=>a.username===e&&a.id!==s)}catch{return!1}},checkEmailAvailable:async(e,s=null)=>{try{const r={search:e},{users:t}=await l(r);return!t.find(a=>a.email===e&&a.id!==s)}catch{return!1}}}};export{n as m,_ as u};
